apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: datamon-pipeline
  namespace: datamon
spec:
  params:
    - default: datamon
      name: APP_NAME
      type: string
    - default: 'https://github.ibm.com/hcsd/notebook-service-template'
      name: GIT_REPO
      type: string
    - default: main
      name: GIT_REVISION
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/datamon/datamon:latest'
      name: IMAGE_NAME
      type: string
    - default: .
      name: PATH_CONTEXT
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: build
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: TLSVERIFY
          value: 'false'
        - name: CONTEXT
          value: $(params.PATH_CONTEXT)
      runAfter:
        - fetch-repository
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: workspace
    - name: deploy
      params:
        - name: SCRIPT
          value: |-
            cd manifests
            ls -la
            oc apply -f .
            APP_URL=$(oc get route app -o jsonpath="{.spec.host}")
            echo -n "$APP_URL" | tee $(results.output.path)
      runAfter:
        - build
      taskRef:
        kind: Task
        name: ibm-pak-gs
      workspaces:
        - name: manifest-dir
          workspace: workspace
    - name: create-api-in-apic
      params:
        - name: apic-image
          value: >-
            image-registry.openshift-image-registry.svc:5000/datamon/apic-tekton
        - name: apic-mgmt-server
          value: >-
            api-manage-cb35bb2a-platform-api-integration.hostname
        - name: apic-porg-dev-owner-username
          value: dev-owner-username
        - name: apic-porg-dev-owner-password
          value: dev-owner-password
        - name: apic-porg-dev-name
          value: esg-development
        - name: apic-cat-dev-name
          value: esg-portfolio-analysis
        - name: apigen-url
          value: 'http://$(tasks.deploy.results.output)/api/openapi-generator'
        - name: service-url
          value: 'http://$(tasks.deploy.results.output)'
      runAfter:
        - deploy
      taskRef:
        kind: Task
        name: create-api-in-apic
  workspaces:
    - name: workspace
